{"version":3,"sources":["app.js"],"names":["$","initMap","autoCenter","bounds","google","maps","LatLngBounds","i","markers","length","extend","position","map","fitBounds","HomeControl","controlDiv","event","addDomListener","zoomout","currentZoomLevel","getZoom","setZoom","zoomin","iconsLength","macDoList","lat","lng","data","city","reviews","icons","iconCounter","iconURLPrefix","Map","document","getElementById","zoom","disableDefaultUI","zoomControl","scaleControl","scrollwheel","center","styles","featureType","stylers","visibility","elementType","color","lightness","saturation","gamma","myLatLng","marker","LatLng","Marker","icon","push","addListener","trigger","clusterStyles","clusterOptions","markerCluster","textColor","url","height","width","textSize","zoomOnClick","MarkerClusterer","cluster","homeControlDiv","createElement","index","controls","ControlPosition","TOP_LEFT","initDirectionMap","link","zoomout1","zoomin1","title","navigator","geolocation","getCurrentPosition","getAddressFromLatLang","geocoder","Geocoder","geocode","latLng","results","status","console","log","GeocoderStatus","OK","end","formatted_address","start","pos","directionsDisplay","DirectionsRenderer","directionsService","DirectionsService","request","origin","destination","travelMode","TravelMode","DRIVING","setMap","route","response","DirectionsStatus","setDirections","coords","latitude","longitude","handleLocationError","setCenter","getPosition","$body","$popups","showPopup","noScroll","owlCarousel","items","touchDrag","autoplay","autoplayTimeout","dots","addClassActive","loop","singleItem","animateIn","animateOut","nav","navText","validate","form","errorMessageClass","onError","$form","on","e","preventDefault","currentClass","this","currentPopup","filter","hasClass","removeClass","addClass","closest","$section","currentHadler","attr","currentId","replace","currentEl","elPosition","offset","top","extraPadding","css","stop","animate","scrollTop","parseInt","window"],"mappings":"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","file":"app.js","sourcesContent":["$(() => {\n    var\n        $body = $('body'),\n        $popups = $('.jsPopupEl'),\n        // classes\n        showPopup = 'is-show-popup',\n        noScroll = 'is-no-scroll';\n    // vars\n\n    $(\".jsOpinionsCarousel\").owlCarousel({\n        items: 1,\n        touchDrag: false,\n        autoplay: true,\n        autoplayTimeout: 8000,\n        dots: true,\n        addClassActive: true,\n        loop: true,\n        singleItem: true,\n        animateIn: 'fadeIn',\n        animateOut: 'fadeOut'\n    });\n\n    $('.jsSlider').owlCarousel({\n        items: 1,\n        touchDrag: false,\n        addClassActive: true,\n        loop: true,\n        dots: false,\n        nav: true,\n        navText: false,\n        singleItem: true,\n        animateIn: 'fadeIn',\n        animateOut: 'fadeOut'\n    });\n\n    // Setup form validation on the form 'send-review-form'\n    $.validate({\n        form: '#send-review-form',\n        errorMessageClass: 'error-message',\n        onError : function($form) {\n\n        }\n    });\n\n    // show/hide site popups\n    $('.jsPopupHandler').on('click', function(e) {\n        e.preventDefault();\n\n        var\n            currentClass = $(this).data('popup-handler'),\n            currentPopup = $popups.filter('[data-popup-el=\"' + currentClass + '\"]');\n        // vars\n\n        if (!(currentPopup.hasClass(showPopup))) {\n            currentPopup.addClass(showPopup);\n            $body.addClass(noScroll);\n        } else {\n            currentPopup.removeClass(showPopup);\n            $body.removeClass(noScroll);\n        }\n    });\n\n    $('.jsPopupClose').on('click', function(e) {\n        e.preventDefault();\n\n        $(this).closest('.jsPopupEl').removeClass(showPopup);\n        $body.removeClass(noScroll);\n    });\n\n    // scroll to selected section\n    $('.jsScrollToHandler').on('click', function(e) {\n        e.preventDefault();\n\n        var\n            $section = $('.jsScrollToEl'),\n            currentHadler = $(this).attr('href'),\n            currentId = currentHadler.replace('#', ''),\n            currentEl = $section.filter('[id=\"' + currentId + '\"]'),\n            elPosition = currentEl.offset().top,\n            extraPadding = currentEl.css('padding-top');\n\n        $body.stop().animate({\n            scrollTop: elPosition + parseInt(extraPadding) - 90\n        }, 700);\n\n        $popups.removeClass(showPopup);\n        $body.removeClass(noScroll);\n    });\n\n    function initMap() {\n        // need to remove after add real data\n        var macDoList = [{\n            lat: 49.00408,\n            lng: 2.56228,\n            data: {\n                city: 'Париж',\n                reviews: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\n            }\n        }, {\n            lat: 49.00408,\n            lng: 2.56228,\n            data: {\n                city: 'Париж',\n                reviews: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation'\n            }\n        }, {\n            lat: 48.93675,\n            lng: 2.35237,\n            data: {\n                city: 'Сент-Дениз',\n                reviews: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\n            }\n        }, {\n            lat: 48.93168,\n            lng: 2.39858,\n            data: {\n                city: 'Ля Корню',\n                reviews: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam.'\n            }\n        }, {\n            lat: 48.91304,\n            lng: 2.38027,\n            data: {\n                city: 'Ауберлиез',\n                reviews: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\n            }\n        }, ];\n\n        var\n            map,\n            icons = [],\n            markers = [],\n            iconsLength,\n            iconCounter = 0,\n            iconURLPrefix = '../img/markers/';\n        // vars\n\n        map = new google.maps.Map(document.getElementById('map'), {\n            zoom: 3,\n            disableDefaultUI: true,\n            zoomControl: false,\n            scaleControl: false,\n            scrollwheel: false,\n            center: { lat: 47.210921, lng: 38.932016 },\n            styles: [\n                { 'featureType': 'administrative', 'stylers': [{ 'visibility': 'off' }] },\n                { 'featureType': 'poi', 'stylers': [{ 'visibility': 'simplified' }] },\n                { 'featureType': 'road', 'elementType': 'labels', 'stylers': [{ 'visibility': 'simplified' }] },\n                { 'featureType': 'water', 'stylers': [{ 'visibility': 'simplified' }] },\n                { 'featureType': 'transit', 'stylers': [{ 'visibility': 'simplified' }] },\n                { 'featureType': 'landscape', 'stylers': [{ 'visibility': 'simplified' }] },\n                { 'featureType': 'road.highway', 'stylers': [{ 'visibility': 'off' }] },\n                { 'featureType': 'road.local', 'stylers': [{ 'visibility': 'on' }] },\n                { 'featureType': 'road.highway', 'elementType': 'geometry', 'stylers': [{ 'visibility': 'on' }] },\n                { 'featureType': 'water', 'stylers': [{ 'color': '#84afa3' }, { 'lightness': 52 }] }, { 'stylers': [{ 'saturation': -17 }, { 'gamma': 0.36 }] },\n                { 'featureType': 'transit.line', 'elementType': 'geometry', 'stylers': [{ 'color': '#3f518c' }] }\n            ]\n        });\n\n        // Setup the different icons\n        icons = [\n            iconURLPrefix + 'm1.png',\n            iconURLPrefix + 'm2.png',\n            iconURLPrefix + 'm3.png',\n            iconURLPrefix + 'm4.png',\n            iconURLPrefix + 'm5.png'\n        ];\n\n        iconsLength = icons.length;\n\n        for (var i = 0; i < macDoList.length; i++) {\n            var\n                myLatLng,\n                marker;\n            // vars\n\n            myLatLng = new google.maps.LatLng(\n                macDoList[i].lat,\n                macDoList[i].lng);\n\n            marker = new google.maps.Marker({\n                position: myLatLng,\n                map: map,\n                icon: icons[iconCounter]\n            });\n\n            markers.push(marker);\n\n            iconCounter++;\n            // We only have a limited number of possible icon colors, so we may have to restart the counter\n            if (iconCounter >= iconsLength) {\n                iconCounter = 0;\n            }\n\n            // Register a click event listener on the marker to show popup\n            google.maps.event.addListener(marker, 'click', (function(marker, i) {\n                return function() {\n                    $('.jsPopupHandler[data-popup-handler=\"reviews\"]').trigger('click');\n                }\n            })(marker, i));\n        }\n\n        function autoCenter() {\n            //  Create a new viewpoint bound\n            var\n                bounds = new google.maps.LatLngBounds();\n            //  Go through each...\n            for (var i = 0; i < markers.length; i++) {\n                bounds.extend(markers[i].position);\n            }\n            //  Fit these bounds to the map\n            map.fitBounds(bounds);\n        }\n\n        autoCenter();\n\n        var\n            clusterStyles,\n            clusterOptions,\n            markerCluster;\n        //vars\n\n        clusterStyles = [{\n            textColor: '#333333',\n            url: '../img/but_blue.svg',\n            height: 25,\n            width: 25,\n            textSize: 14\n        }];\n\n        clusterOptions = {\n            styles: clusterStyles,\n            zoomOnClick: false\n        };\n\n        markerCluster = new MarkerClusterer(map, markers, clusterOptions);\n\n        // Register a click event listener on the cluster\n        google.maps.event.addListener(markerCluster, 'clusterclick',\n            function(cluster) {\n                $('.jsPopupHandler[data-popup-handler=\"reviews\"]').trigger('click');\n            }\n        );\n\n        function HomeControl(controlDiv, map) {\n            google.maps.event.addDomListener(zoomout, 'click', function() {\n                var\n                    currentZoomLevel = map.getZoom();\n                if (currentZoomLevel != 0) {\n                    map.setZoom(currentZoomLevel - 1);\n                }\n            });\n\n            google.maps.event.addDomListener(zoomin, 'click', function() {\n                var\n                    currentZoomLevel = map.getZoom();\n                if (currentZoomLevel != 21) {\n                    map.setZoom(currentZoomLevel + 1);\n                }\n            });\n        }\n\n        // Create the DIV to hold the control and\n        // call the HomeControl() constructor passing\n        // in this DIV.\n        var\n            homeControlDiv = document.createElement('div'),\n            homeControl = new HomeControl(homeControlDiv, map);\n\n        homeControlDiv.index = 1;\n        map.controls[google.maps.ControlPosition.TOP_LEFT].push(homeControlDiv);\n    }\n\n    google.maps.event.addDomListener(window, 'load', initMap);\n\n    function initDirectionMap( link ) {\n        var map,\n            marker,\n            myLatLng = { lat: 47.210921, lng: 38.932016 };\n\n        map = new google.maps.Map(document.getElementById('map-direction'), {\n            center: myLatLng,\n            zoom: 16,\n            disableDefaultUI: true,\n            zoomControl: false,\n            scaleControl: false,\n            scrollwheel: false,\n            styles: [\n                { 'featureType': 'administrative', 'stylers': [{ 'visibility': 'off' }] },\n                { 'featureType': 'poi', 'stylers': [{ 'visibility': 'simplified' }] },\n                { 'featureType': 'road', 'elementType': 'labels', 'stylers': [{ 'visibility': 'simplified' }] },\n                { 'featureType': 'water', 'stylers': [{ 'visibility': 'simplified' }] },\n                { 'featureType': 'transit', 'stylers': [{ 'visibility': 'simplified' }] },\n                { 'featureType': 'landscape', 'stylers': [{ 'visibility': 'simplified' }] },\n                { 'featureType': 'road.highway', 'stylers': [{ 'visibility': 'off' }] },\n                { 'featureType': 'road.local', 'stylers': [{ 'visibility': 'on' }] },\n                { 'featureType': 'road.highway', 'elementType': 'geometry', 'stylers': [{ 'visibility': 'on' }] },\n                { 'featureType': 'water', 'stylers': [{ 'color': '#84afa3' }, { 'lightness': 52 }] }, { 'stylers': [{ 'saturation': -17 }, { 'gamma': 0.36 }] },\n                { 'featureType': 'transit.line', 'elementType': 'geometry', 'stylers': [{ 'color': '#3f518c' }] }\n            ]\n        });\n\n        marker = new google.maps.Marker({\n            position: myLatLng,\n            map: map,\n            title: \"Hello World!\"\n        });\n\n        function HomeControl(controlDiv, map) {\n            google.maps.event.addDomListener(zoomout1, 'click', function() {\n                var\n                    currentZoomLevel = map.getZoom();\n                if (currentZoomLevel != 0) {\n                    map.setZoom(currentZoomLevel - 1);\n                }\n            });\n\n            google.maps.event.addDomListener(zoomin1, 'click', function() {\n                var\n                    currentZoomLevel = map.getZoom();\n                if (currentZoomLevel != 21) {\n                    map.setZoom(currentZoomLevel + 1);\n                }\n            });\n        }\n\n        // HTML5 geolocation.\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(function(position) {\n                // the coordinates of geolocation\n                var pos = {\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude\n                };\n                // vars\n\n                getAddressFromLatLang(pos.lat, pos.lng);\n\n                function getAddressFromLatLang(lat, lng) {\n                    var\n                        geocoder = new google.maps.Geocoder(),\n                        myLatLng = new google.maps.LatLng(lat, lng);\n                    // vars\n\n                    geocoder.geocode({ 'latLng': myLatLng }, function(results, status) {\n                        console.log(results);\n                        if (status == google.maps.GeocoderStatus.OK) {\n                            if (results[0]) {\n                                var\n                                    currentAddress = results[0].formatted_address,\n                                    // the coordinates for direction\n                                    end = new google.maps.LatLng(47.210921, 38.932016),\n                                    start = new google.maps.LatLng(pos.lat, pos.lng),\n                                    // init services\n                                    directionsDisplay = new google.maps.DirectionsRenderer(),\n                                    directionsService = new google.maps.DirectionsService(),\n                                    // request\n                                    request = {\n                                        origin: start,\n                                        destination: end,\n                                        travelMode: google.maps.TravelMode.DRIVING\n                                    };\n                                // vars\n\n                                directionsDisplay.setMap(map);\n\n                                // response\n                                directionsService.route(request, function(response, status) {\n                                    if (status == google.maps.DirectionsStatus.OK) {\n                                        directionsDisplay.setDirections(response);\n                                    }\n                                });\n\n                                // create popup with start address\n                                // infoWindow.setPosition(pos);\n                                // infoWindow.setContent(currentAddress);\n                            }\n                        } else {\n                            console.log(\"Geocode was not successful for the following reason: \" + status);\n                        }\n                    });\n                }\n            }, function() {\n                handleLocationError(true, map.setCenter(marker.getPosition()));\n            });\n        } else {\n            // Browser doesn't support Geolocation\n            handleLocationError(false, map.setCenter(marker.getPosition()));\n        }\n\n        // Create the DIV to hold the control and\n        // call the HomeControl() constructor passing\n        // in this DIV.\n        var\n            homeControlDiv = document.createElement('div'),\n            homeControl = new HomeControl(homeControlDiv, map);\n\n        homeControlDiv.index = 1;\n        map.controls[google.maps.ControlPosition.TOP_LEFT].push(homeControlDiv);\n    }\n\n    $('.jsInitMapDirection').on('click', function() {\n        google.maps.event.addDomListener(window, 'load', initDirectionMap(this));\n    })\n});\n"],"sourceRoot":"/source/"}